version: 2
jobs:
  unit-tests:
    working_directory: ~/app
    docker:
    # Use a custom docker image with node 7.7.2 and chromium installed
      - image: gcr.io/lenken-app/lenken-frontend:test-env
        auth:
            username: _json_key
            password: $GCLOUD_SERVICE_KEY_TESTING

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install
          
      - run:
          name: Install code climate-test-reporter
          command: sudo yarn global add codeclimate-test-reporter
      
      - save_cache:
          key: lenken-cache-{{ .BuildNum }}
          paths:
            - ~/.yarn-cache   
      - run:
          name: Run tests
          command: xvfb-run yarn test 
      - run:
          name: Send Coverage data to codeclimate
          command: CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN codeclimate-test-reporter < coverage/lcov.info
  request_for_approval:
    working_directory: ~/app
    docker:
        - image: circleci/node:latest
    steps:
        - checkout
        - run: 
            name: Ask for approval
            command: .circleci/slack_integration.sh

  deploy_to_staging:
    working_directory: /tmp/lenken
    docker:
      - image: google/cloud-sdk
    steps: 
      - checkout
      - run:
          name: Add GCloud key to JSON file
          command: echo $GCLOUD_SERVICE_KEY_TESTING > ${HOME}/auth_lenken_app.json
      - run:
          name: Deploy to Staging GCP VMs
          command: .circleci/deploy_lenken.sh

  deploy_to_production:
    working_directory: /tmp/lenken
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Add GCloud key to JSON file
          command: echo $GCLOUD_SERVICE_KEY_TESTING > ${HOME}/auth_lenken_app.json
      - run:
          name: Deploy to Production GCP VMs
          command: .circleci/deploy_lenken_production.sh
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - unit-tests
      - deploy_to_staging:
          requires:
            - unit-tests
          filters:
            branches:
              only: develop
      - request_for_approval:
          requires:
            - unit-tests
          filters:
            branches:
                only: production
      - approve_deploy:
          type: approval
          requires:
            - request_for_approval
      - deploy_to_production:
          requires:
            - approve_deploy
          filters:
            branches:
                only: production
